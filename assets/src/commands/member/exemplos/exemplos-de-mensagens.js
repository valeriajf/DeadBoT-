const { PREFIX } = require(`${BASE_DIR}/config`);
const { delay } = require("baileys");

module.exports = {
  name: "exemplos-de-mensagens",
  description:
    "Lista todos os exemplos dispon√≠veis de envio de mensagens para desenvolvedores",
  commands: [
    "exemplos-de-mensagens",
    "exemplos",
    "help-exemplos",
    "exemplo-de-mensagem",
    "exemplo-de-mensagens",
    "enviar-exemplos",
    "enviar-exemplo",
  ],
  usage: `${PREFIX}exemplos-de-mensagens`,
  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ sendReply, sendReact, prefix }) => {
    await sendReact("üìö");

    await delay(2000);

    await sendReply(
      "*üìö EXEMPLOS DISPON√çVEIS*\n\n" +
        "Use os comandos abaixo para ver exemplos pr√°ticos de como usar os meus comandos:"
    );

    await delay(2000);

    await sendReply(
      "*üîä √ÅUDIO*\n" +
        `‚Ä¢ \`${prefix}enviar-audio-de-arquivo\` - Enviar √°udio de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-audio-de-url\` - Enviar √°udio de URL\n` +
        `‚Ä¢ \`${prefix}enviar-audio-de-buffer\` - Enviar √°udio de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üñºÔ∏è IMAGEM*\n" +
        `‚Ä¢ \`${prefix}enviar-imagem-de-arquivo\` - Enviar imagem de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-imagem-de-url\` - Enviar imagem de URL\n` +
        `‚Ä¢ \`${prefix}enviar-imagem-de-buffer\` - Enviar imagem de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üé¨ V√çDEO*\n" +
        `‚Ä¢ \`${prefix}enviar-video-de-arquivo\` - Enviar v√≠deo de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-video-de-url\` - Enviar v√≠deo de URL\n` +
        `‚Ä¢ \`${prefix}enviar-video-de-buffer\` - Enviar v√≠deo de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üéûÔ∏è GIF*\n" +
        `‚Ä¢ \`${prefix}enviar-gif-de-arquivo\` - Enviar GIF de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-gif-de-url\` - Enviar GIF de URL\n` +
        `‚Ä¢ \`${prefix}enviar-gif-de-buffer\` - Enviar GIF de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üè∑Ô∏è STICKER*\n" +
        `‚Ä¢ \`${prefix}enviar-sticker-de-arquivo\` - Enviar sticker de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-sticker-de-url\` - Enviar sticker de URL\n` +
        `‚Ä¢ \`${prefix}enviar-sticker-de-buffer\` - Enviar sticker de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üìä ENQUETE*\n" +
        `‚Ä¢ \`${prefix}enviar-enquete\` - Enviar enquetes/vota√ß√µes (escolha √∫nica ou m√∫ltipla)`
    );

    await delay(2000);

    await sendReply(
      "*üìç LOCALIZA√á√ÉO*\n" +
        `‚Ä¢ \`${prefix}enviar-localizacao\` - Enviar localiza√ß√£o`
    );

    await delay(2000);

    await sendReply(
      "*üì≤ CONTATO*\n" + `‚Ä¢ \`${prefix}enviar-contato\` - Enviar contato`
    );

    await delay(2000);

    await sendReply(
      "*üìÑ DOCUMENTO*\n" +
        `‚Ä¢ \`${prefix}enviar-documento-de-arquivo\` - Enviar documento de arquivo local\n` +
        `‚Ä¢ \`${prefix}enviar-documento-de-url\` - Enviar documento de URL\n` +
        `‚Ä¢ \`${prefix}enviar-documento-de-buffer\` - Enviar documento de buffer`
    );

    await delay(2000);

    await sendReply(
      "*üí¨ TEXTO E RESPOSTAS*\n" +
        `‚Ä¢ \`${prefix}enviar-texto\` - Enviar texto (com/sem men√ß√£o)\n` +
        `‚Ä¢ \`${prefix}enviar-resposta\` - Responder mensagens (com/sem men√ß√£o)\n` +
        `‚Ä¢ \`${prefix}enviar-reacoes\` - Enviar rea√ß√µes (emojis)\n` +
        `‚Ä¢ \`${prefix}enviar-mensagem-editada\` - Enviar mensagens editadas`
    );

    await delay(2000);

    await sendReply(
      "*üìä DADOS E METADADOS*\n" +
        `‚Ä¢ \`${prefix}obter-dados-grupo\` - Obter dados do grupo (nome, dono, participantes)\n` +
        `‚Ä¢ \`${prefix}obter-metadados-mensagem\` - Obter metadados da mensagem\n` +
        `‚Ä¢ \`${prefix}funcoes-grupo\` - Fun√ß√µes utilit√°rias de grupo (demonstra√ß√£o)\n` +
        `‚Ä¢ \`${prefix}raw-message\` - Obter dados brutos da mensagem`
    );

    await delay(2000);

    await sendReply(
      "*üéØ COMO USAR*\n\n" +
        "1Ô∏è‚É£ Execute qualquer comando da lista acima\n" +
        "2Ô∏è‚É£ Observe o comportamento pr√°tico\n" +
        "3Ô∏è‚É£ Veja o c√≥digo fonte em `/src/commands/member/exemplos/`\n" +
        "4Ô∏è‚É£ Use como base para seus pr√≥prios comandos\n\n" +
        "*üí° Dica:* Todos os exemplos incluem explica√ß√µes detalhadas e casos de uso!"
    );

    await delay(2000);

    await sendReply(
      "*üìù FUN√á√ïES DISPON√çVEIS*\n\n" +
        "Veja o arquivo `@types/index.d.ts` para documenta√ß√£o completa de todas as fun√ß√µes dispon√≠veis com exemplos de c√≥digo!"
    );
  },
};
